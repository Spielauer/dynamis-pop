#include "model.h"
static int HaveAGoodDay;
namespace mm {
#line 1 "../code/ImmigrationBackMigration.mpp"
//LABEL(ImmigrationBackMigration, EN) Back Migration

/* NOTE(ImmigrationBackMigration, EN)
This module implements back migration
*/

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Parameters
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//parameters
//{
//    logical ModelBackmigration;
//    double BackMigrationHazard;
//};

//parameter_group PG04_BackMigration                              //EN Back migration
//{
//    ModelBackmigration,
//    BackMigrationHazard
//};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Actor states and functions
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//actor Person
//{
//    event   timeBackMigrationEvent, BackMigrationEvent;       //EN Back Migration Event
//};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Implementation
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TIME Person::timeBackMigrationEvent()
{
    if (! is_resident && gprParam->ModelBackmigration &&  ever_resident &&  calendar_year >= MIN(SIM_YEAR_RANGE) && gprParam->BackMigrationHazard > 0)
    {
        return WAIT(-TIME(log(RandUniform(16)) / gprParam->BackMigrationHazard));
    }
    else return TIME_INFINITE;
};

void Person::BackMigrationEvent()
{
    doResidentialMove(geo_prev );
}
} // namespace 
