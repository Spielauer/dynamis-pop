#include "model.h"
static int HaveAGoodDay;
namespace mm {
#line 1 "../code/MortalityGeneral.mpp"
//LABEL(MortalityGeneral, EN) Mortality General

/* NOTE(MortalityGeneral, EN)
This module contains the general functionality of mortality
*/

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Dimensions
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//classification MORTALITY_MODEL          //EN Mortality model selection
//{
//    MOM_BASE,                           //EN Base model
//    MOM_DETAIL,                         //EN Detailed model
//    MOM_ALIGNED_MACRO_TRENDS,           //EN Aligned, trends as general population
//    MOM_ALIGNED_MICRO_TRENDS            //EN Aligned, specific trends
//};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Parameters
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//parameters 
//{
//    MORTALITY_MODEL MortalityModel;     //EN Mortality model selection
//};

//parameter_group PG02_Mortality          //EN Mortality
//{
//    MortalityModel,
//    PG02_MortalityBase,
//    PG02_MortalityDetailed
//};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Actor states and functions
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//actor Person
//{
//    //EN Person is at risk of death
//    logical is_mortal = (creation_type == CT_BIRTH
//                     || (creation_type == CT_START && calendar_year >= MIN(SIM_YEAR_RANGE))
//                     || (creation_type == CT_POOL && ever_resident)
//                     || (creation_type == CT_SCRATCH && ever_resident)) ? TRUE : FALSE;
//    
//    
//    //EN Handle Mortality
//    void HandleMortality(); 
//
//    //EN Death at max lifespan
//    event timeDeathAtMaxLifespanEvent, DeathAtMaxLifespanEvent;
//};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Implementation
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TIME Person::timeDeathAtMaxLifespanEvent() { return  time_of_birth + MAX(AGE_RANGE) + 0.99999; }
void Person::DeathAtMaxLifespanEvent() { Finish(); }




} // namespace 
